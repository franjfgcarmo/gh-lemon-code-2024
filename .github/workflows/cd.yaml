name: Continuous Delivery

on:
  push:
    branches: [main]
    paths: ["hangman-api/**"]
  pull_request:
    branches: [main]
    paths: ["hangman-api/**"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name : Checkout code #optional
        uses : actions/checkout@v4   
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: ./hangman-api/package-lock.json
      - name : build
        working-directory: ./hangman-api
        run : |
          npm ci
          npm run build --if-present
      - name: Upload artifact (dist folder)
        uses: actions/upload-artifact@v4
        with:
          name: build-code
          path: hangman-api/dist/
  
  delivery:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4      
      - name: Download artifact (dist folder)
        uses: actions/download-artifact@v4
        with:
          name: build-code
          path: hangman-api/dist/
      #- name: docker login
      #  uses: docker/login-action@v3
      #  with:
      #    username: ${{ secrets.DOCKER_USERNAME }}
      #    password: ${{ secrets.DOCKER_PASSWORD }}
      #- name: Setup Docker builder
      #  uses: docker/setup-buildx-action@v3
      #- name: Build and push Docker image
      #  uses: docker/build-push-action@v6
      #  with:
      #    context: ./hangman-api
      #    file: ./hangman-api/Dockerfile.workflow
      #    push: true
      #    tags: ${{ secrets.DOCKER_USERNAME }}/hangman-api-actions-2024:latest
      - name: Build and push Docker image
        working-directory: ./hangman-api
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_REPOSITORY: hangman-api-2024
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          image=$DOCKER_USERNAME/$DOCKER_REPOSITORY:$(date +%s)
          docker build -t $image -f Dockerfile.workflow .
          docker push $image
